name: Build and Deploy API Docs

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0
        
    - name: Restore Dependencies
      run: dotnet restore

    - name: Build  API
      run: |
        dotnet clean ./DotNetBucketry/DotNetBucketry.csproj
        dotnet build ./DotNetBucketry/DotNetBucketry.csproj --configuration Release

    - name: Generate Swagger JSON
      run: |
          dotnet tool install -g swashbuckle.aspnetcore.cli
          export PATH="$PATH:/home/runner/.dotnet/tools"
          swagger tofile --output swagger.json ./DotNetBucketry/bin/Release/net8.0/DotNetBucketry.dll v1

    - name: Install Redoc CLI
      run: npm install -g @redocly/cli
      
    - name: Generate Static HTML Documentation
      run: redocly build-docs swagger.json -o api-docs.html

    - name: Debug Generated Files
      run: ls -la
      
    - name: Upload Documentation Artifact
      uses: actions/upload-artifact@v4
      with:
        name: api-docs
        path: ./api-docs.html
        

    - name: Debug Generated Files
      run: ls -la
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: gh-pages

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to AWS S3
      run: |
        aws s3 cp api-docs.html s3://mydemobucketkrishna/api-docs.html
        
        
#    - name: Upload to Confluence Page
#      env:
#        CONFLUENCE_USERNAME: ${{ secrets.CONFLUENCE_USERNAME }}
#        CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
#        CONFLUENCE_BASE_URL: ${{ secrets.CONFLUENCE_BASE_URL }}
#        CONFLUENCE_PAGE_ID: ${{ secrets.CONFLUENCE_PAGE_ID }}
#      run: |
#        CONTENT=$(cat api-docs.html | jq -Rs .)
#        curl -X PUT \
#          -u "$CONFLUENCE_USERNAME:$CONFLUENCE_API_TOKEN" \
#          -H "Content-Type: application/json" \
#          -d '{
#            "version": {
#              "number": 2
#            },
#            "title": "API Documentation",
#            "type": "page",
#            "body": {
#              "storage": {
#                "value": '"$CONTENT"',
#                "representation": "storage"
#              }
#            }
#          }' \
#          "$CONFLUENCE_BASE_URL/rest/api/content/$CONFLUENCE_PAGE_ID"

    - name: Upload to Confluence as Attachment
      env:
        CONFLUENCE_USERNAME: ${{ secrets.CONFLUENCE_USERNAME }}
        CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
        CONFLUENCE_BASE_URL: ${{ secrets.CONFLUENCE_BASE_URL }}
        CONFLUENCE_PAGE_ID: ${{ secrets.CONFLUENCE_PAGE_ID }}
      run: |
        curl -X POST \
          -u "$CONFLUENCE_USERNAME:$CONFLUENCE_API_TOKEN" \
          -H "X-Atlassian-Token: no-check" \
          -F "file=@api-docs.html" \
          "$CONFLUENCE_BASE_URL/rest/api/content/$CONFLUENCE_PAGE_ID/child/attachment"
